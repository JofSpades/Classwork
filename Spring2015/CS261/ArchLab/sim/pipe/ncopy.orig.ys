#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len ints to dst.				 #
# Return the number of positive ints (>0) contained in src.		 #
#																 #
# Include your name and ID here.								 #
# Maxwell Petersen - mpeter39									 #
# Describe how and why you modified the baseline code.			 #
# Implamented IADDL and made code to skip over Done so I could	 #
# use the leave function. Then I unrlled the loop to the 16th    #
# element with checks for end at each part. Currently using      #
# ./benchmark.pl I get 12.89CPE 								 #
##################################################################
# Do not modify this portion
# Function prologue.
ncopy:	pushl %ebp		# Save old frame pointer
	rrmovl %esp,%ebp	# Set up new frame pointer
	pushl %esi		# Save callee-save regs
	pushl %ebx
	pushl %edi
	mrmovl 8(%ebp),%ebx	# src
	mrmovl 16(%ebp),%edx	# len
	mrmovl 12(%ebp),%ecx	# dst

##################################################################
# You can modify this portion
	# Loop header
	rrmovl %edx, %eax
	andl %edx, %edx
	jle End
	iaddl $-4, %edx
	jl WrapUp

TopOfLoop:
	mrmovl (%ebx), %esi
	mrmovl 4(%ebx), %edi
	rmmovl %esi, (%ecx)
	andl %esi, %esi
	jle Next
	iaddl $-1, %eax

Next:
	rmmovl %edi, 4(%ecx)
	andl %edi, %edi
	jle Next2
	iaddl $-1, %eax

Next2:
	mrmovl 8(%ebx), %esi
	mrmovl 12(%ebx), %edi
	rmmovl %esi, 8(%ecx)
	andl %esi, %esi
	jle Next3
	iaddl $-1, %eax

Next3:
	rmmovl %edi, 12(%ecx)
	andl %edi, %edi
	jle Next4
	iaddl $-1, %eax

Next4:
	iaddl $16, %ebx
	iaddl $16, %ecx
	iaddl $-4, %edx
	jge TopOfLoop

WrapUp:
	iaddl $4, %edx

Clean:
	iaddl $-1, %edx
	jl End
	mrmovl (%ebx), %esi
	mrmovl 4(%ebx), %edi
	rmmovl %esi, (%ecx)
	andl %esi, %esi
	jle Clean2
	iaddl $1, %eax

Clean2:
	iaddl $-1, %edx
	jl End
	rmmovl %edi, 4(%ecx)
	andl %edi, %edi
	jle Clean3
	iaddl $1, %eax

Clean3:
	iaddl $-1, %edx
	jl End
	mrmovl 8(%ebx), %esi
	rmmovl %esi, 8(%ecx)
	andl %esi, %esi
	jle End
	iaddl $1, $eax

End:
	popl %edi
	popl %ebx
	popl %esi
	leave
	ret
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	popl %edi             # Restore callee-save registers
	popl %ebx
	popl %esi
	rrmovl %ebp, %esp
	popl %ebp
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
